const diceContainer = document.querySelector('.dice-container');
const rollButton = document.querySelector('.roll');
const diceCountSelect = document.getElementById('diceCount');

//   //////////////////////////////////////

rollButton.addEventListener('click', rollDice);
/* theme */
// –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞
const themeToggle = document.getElementById('themeToggle');

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
function toggleTheme() {
	document.body.classList.toggle('light-theme');
	const isLight = document.body.classList.contains('light-theme');
	themeToggle.textContent = isLight ? '‚òÄÔ∏è' : 'üåô';
	localStorage.setItem('theme', isLight ? 'light' : 'dark');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function initTheme() {
	const savedTheme = localStorage.getItem('theme') || 'dark';
	if (savedTheme === 'light') {
		document.body.classList.add('light-theme');
		themeToggle.textContent = '‚òÄÔ∏è';
	} else {
		themeToggle.textContent = 'üåô';
	}
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç–µ–º—ã
themeToggle.addEventListener('click', toggleTheme);

// //////////////////////////////////
// SVG —à–∞–±–ª–æ–Ω –¥–ª—è –∫—É–±–∏–∫–∞
const diceSVG = (dots) => `
            <svg viewBox="0 0 100 100">
                ${dots
									.map((pos) => `<circle class="dot" cx="${pos[0]}" cy="${pos[1]}" r="8"/>`)
									.join('')}
            </svg>
        `;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–æ—á–µ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä–∞–Ω–∏
const diceFaces = {
	1: [[50, 50]],
	2: [
		[30, 30],
		[70, 70],
	],
	3: [
		[30, 30],
		[50, 50],
		[70, 70],
	],
	4: [
		[30, 30],
		[70, 30],
		[30, 70],
		[70, 70],
	],
	5: [
		[30, 30],
		[70, 30],
		[30, 70],
		[70, 70],
		[50, 50],
	],
	6: [
		[30, 30],
		[70, 30],
		[30, 50],
		[70, 50],
		[30, 70],
		[70, 70],
	],
};

function createDiceElement() {
	const div = document.createElement('div');
	div.className = 'dice';
	return div;
}

function updateDice(diceElement, number) {
	diceElement.classList.add('rolling');
	setTimeout(() => {
		diceElement.innerHTML = diceSVG(diceFaces[number]);
		diceElement.classList.remove('rolling');
	}, 800);
}

function rollDice() {
	const count = parseInt(diceCountSelect.value);
	const diceElements = Array.from({ length: count }, createDiceElement);

	diceContainer.innerHTML = '';
	diceElements.forEach((dice) => diceContainer.appendChild(dice));

	diceElements.forEach((dice) => {
		const randomNumber = 1 + Math.floor(crypto.getRandomValues(new Uint32Array(1))[0] % 6);
		updateDice(dice, randomNumber);
	});
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∫—É–±–∏–∫–æ–≤
initTheme();
rollDice();
